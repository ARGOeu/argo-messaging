"use strict";(self.webpackChunkargo_messaging=self.webpackChunkargo_messaging||[]).push([[312],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),g=a,h=m["".concat(u,".").concat(g)]||m[g]||c[g]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2311:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={id:"ams_push_worker",title:"AMS Push Worker"},u=void 0,l={unversionedId:"ams_push_worker",id:"ams_push_worker",title:"AMS Push Worker",description:"AMS Push worker (ver 0.1.0) is a command line utility that let\u2019s you simulate AMS push functionality by pulling messages from an actual AMS project/subscription and pushing them to an endpoint in your local development environment. It\u2019s written in go and it\u2019s packaged as a single binary with no depedencies.",source:"@site/docs/ams_push_worker.md",sourceDirName:".",slug:"/ams_push_worker",permalink:"/argo-messaging/docs/ams_push_worker",draft:!1,tags:[],version:"current",frontMatter:{id:"ams_push_worker",title:"AMS Push Worker"},sidebar:"someSidebar",previous:{title:"How to use the service",permalink:"/argo-messaging/docs/how_to_use"},next:{title:"Q & A - General Questions",permalink:"/argo-messaging/docs/qa"}},p={},c=[],m={toc:c};function g(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"AMS Push worker (ver 0.1.0) is a command line utility that let\u2019s you simulate AMS push functionality by pulling messages from an actual AMS project/subscription and pushing them to an endpoint in your local development environment. It\u2019s written in go and it\u2019s packaged as a single binary with no depedencies."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Github repo: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ARGOeu/ams-push-worker"},"https://github.com/ARGOeu/ams-push-worker")),(0,o.kt)("li",{parentName:"ul"},"Readme: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ARGOeu/ams-push-worker#readme"},"https://github.com/ARGOeu/ams-push-worker#readme")),(0,o.kt)("li",{parentName:"ul"},"Linux Binary: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ARGOeu/ams-push-worker/releases/download/0.1.0/ams-push-worker_linux_x86_64.zip"},"https://github.com/ARGOeu/ams-push-worker/releases/download/0.1.0/ams-push-worker_linux_x86_64.zip"))),(0,o.kt)("p",null,"If you are developing an endpoint that will receive messages from AMS service you can take a look at a simple working python example at the following link:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/ARGOeu/argo-messaging/blob/devel/examples/flask_receive_endpoint/receiver.py"},"https://github.com/ARGOeu/argo-messaging/blob/devel/examples/flask_receive_endpoint/receiver.py"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Some more usefull links:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"AMS docs: ",(0,o.kt)("a",{parentName:"li",href:"https://argoeu.github.io/argo-messaging"},"https://argoeu.github.io/argo-messaging")),(0,o.kt)("li",{parentName:"ul"},"Push enabled subscriptions: ",(0,o.kt)("a",{parentName:"li",href:"https://argoeu.github.io/argo-messaging/docs/api_subscriptions#push-enabled-subscriptions"},"https://argoeu.github.io/argo-messaging/docs/api_subscriptions#push-enabled-subscriptions"))))}g.isMDXComponent=!0}}]);