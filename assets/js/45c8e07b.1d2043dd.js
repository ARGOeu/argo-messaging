"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1843],{6586:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var n=i(4848),t=i(8453);const r={id:"auth",title:"Authentication & Authorization",sidebar_position:4},o="Security and privacy considerations",c={id:"concepts/auth",title:"Authentication & Authorization",description:"Authentication is the process of determining the identity of a client, which is typically a user account. Authorization",source:"@site/docs/concepts/auth.md",sourceDirName:"concepts",slug:"/concepts/auth",permalink:"/argo-messaging/docs/concepts/auth",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"auth",title:"Authentication & Authorization",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Data flow in Argo Messaging",permalink:"/argo-messaging/docs/concepts/msg_flow"},next:{title:"Initial Project & User Management",permalink:"/argo-messaging/docs/concepts/projects_users"}},l={},a=[{value:"User Authentication",id:"user-authentication",level:2},{value:"Authorization",id:"authorization",level:2},{value:"Per Resource Authorization",id:"per-resource-authorization",level:2},{value:"[GET] List ACL of a given topic",id:"get-list-acl-of-a-given-topic",level:2},{value:"[POST] Modify ACL of a given topic",id:"post-modify-acl-of-a-given-topic",level:2},{value:"[GET] List ACL of a given subscription",id:"get-list-acl-of-a-given-subscription",level:2},{value:"Request",id:"request",level:3},{value:"Where",id:"where",level:3},{value:"Example request",id:"example-request",level:3},{value:"Responses",id:"responses",level:3},{value:"Errors",id:"errors",level:3},{value:"[POST] Modify ACL of a given subscription",id:"post-modify-acl-of-a-given-subscription",level:2},{value:"Request",id:"request-1",level:3},{value:"Where",id:"where-1",level:3},{value:"Post data",id:"post-data",level:3},{value:"Example request",id:"example-request-1",level:3},{value:"Responses",id:"responses-1",level:3},{value:"Errors",id:"errors-1",level:3}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"security-and-privacy-considerations",children:"Security and privacy considerations"}),"\n",(0,n.jsx)(s.p,{children:"Authentication is the process of determining the identity of a client, which is typically a user account. Authorization\nis the process of determining what permissions an authenticated identity has on a set of specified resources. In the\nMessaging API, there can be no authorization without authentication."}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"This is an initial implementation of the user authentication and authorization. In the next versions of the ARGO\nMessaging service we are going to provide support for both bear and OpenID Connect tokens for the API access and it will\nbe possible to apply ACLs at each (resource) subscriptions and topics."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"user-authentication",children:"User Authentication"}),"\n",(0,n.jsx)(s.p,{children:"Authentication requires the presence of a populated \u201cusers\u201d collection in the datastore in the adhering to the following\nschema:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{\n\t"name" : "john",\n\t"email" : "john@doe.com",\n\t"project" : "ARGO",\n\t"token" : "S3CR3T",\n\t"roles" : [\n\t\t"admin",\n\t\t"member"\n\t]\n}\n'})}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"name"}),(0,n.jsx)(s.td,{children:"username"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"email"}),(0,n.jsx)(s.td,{children:"User\u2019s email"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"project"}),(0,n.jsx)(s.td,{children:"Project that the user belongs to"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"token"}),(0,n.jsx)(s.td,{children:"Secret token for authentication"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"roles"}),(0,n.jsx)(s.td,{children:"List of roles that user has. Each role definition is used in authorization (explained later)"})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["Each user is authenticated by adding the header parameter ",(0,n.jsx)(s.code,{children:"x-api-key"})," in each API request"]}),"\n",(0,n.jsx)(s.h2,{id:"authorization",children:"Authorization"}),"\n",(0,n.jsx)(s.p,{children:"Authorization requires the presence of a populated \u201croles\u201d collection in the datastore in the adhering to the following\nschema:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{\n\t"resource" : "resource_name:action",\n\t"roles" : [\n\t\t"admin",\n\t\t"member"\n\t]\n}\n'})}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"resource"}),(0,n.jsxs)(s.td,{children:["Holds the name of the resource and the action on that resource in the following format: resource_name",":action"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"roles"}),(0,n.jsxs)(s.td,{children:["A list of roles allowed on this resource",":action"]})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["Resource_name",":action"," must be the same with the default routes supported in the api currently and those are:"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Action"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["topics",":list"]}),(0,n.jsxs)(s.td,{children:["Allow user to list all topics in a project when using  ",(0,n.jsx)(s.code,{children:"GET /projects/PROJECT_A/topics"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["topics",":show"]}),(0,n.jsxs)(s.td,{children:["Allow user to get information on a specific topic when using ",(0,n.jsx)(s.code,{children:"GET /projects/PROJECT_A/topics/TOPIC_A"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["topics",":create"]}),(0,n.jsxs)(s.td,{children:["Allow user to create a new topic when using ",(0,n.jsx)(s.code,{children:"PUT /projects/PROJECT_A/topics/TOPIC_NEW"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["topics",":delete"]}),(0,n.jsxs)(s.td,{children:["Allow user to delete an existing topic when using ",(0,n.jsx)(s.code,{children:"DELETE /projects/PROJECT_A/topics/TOPIC_A"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["topics",":publish"]}),(0,n.jsxs)(s.td,{children:["Allow user to publish messages in a topic when using ",(0,n.jsx)(s.code,{children:"POST /projects/PROJECT_A/topics/TOPIC_A:publish"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["subscriptions",":list"]}),(0,n.jsxs)(s.td,{children:["Allow user to list all subscriptions in a project when using ",(0,n.jsx)(s.code,{children:"GET /projects/PROJECT_A/subscriptions"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["subscriptions",":show"]}),(0,n.jsxs)(s.td,{children:["Allow user to get information on a specific subscription when using ",(0,n.jsx)(s.code,{children:"GET /projects/PROJECT_A/subscriptions/SUB_A"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["subscriptions",":create"]}),(0,n.jsxs)(s.td,{children:["Allow user to create a new subscription when using ",(0,n.jsx)(s.code,{children:"PUT /projects/PROJECT_A/subscriptions/SUB_NEW"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["subscriptions",":delete"]}),(0,n.jsxs)(s.td,{children:["Allow user to delete an existing subscription when using ",(0,n.jsx)(s.code,{children:"DELETE /projects/PROJECT_A/subscriptions/SUB_A"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["subscriptions",":pull"]}),(0,n.jsxs)(s.td,{children:["Allow user to pull messages from a subscription when using ",(0,n.jsx)(s.code,{children:"POST /projects/PROJECT_A/subscriptions/SUB_A:pull"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["subscriptions",":acknowledge"]}),(0,n.jsxs)(s.td,{children:["Allow user to acknowledge messages that has pulled when using ",(0,n.jsx)(s.code,{children:"POST /projects/PROJECT_A/subscriptions/SUB_A:acknowledge"})]})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"per-resource-authorization",children:"Per Resource Authorization"}),"\n",(0,n.jsxs)(s.p,{children:["Messaging API provides the option to control in finer detail access on resources such as topics and subscriptions for\nusers(clients) that are producers or subscribers. Each resource (topic/subscription) comes with an access list (ACL)\nthat contains producers or subscribers that are eligible to use that resource (when publishing or pulling messages\nrespectively). Users with the admin role are able to modify Access lists for topics and subscriptions on the project\nthey belong. In order for the feature to be available Messaging API should have the config parameter ",(0,n.jsx)(s.code,{children:"per_resource_auth"}),"\nset to ",(0,n.jsx)(s.code,{children:"true"})]}),"\n",(0,n.jsx)(s.h2,{id:"get-list-acl-of-a-given-topic",children:"[GET] List ACL of a given topic"}),"\n",(0,n.jsxs)(s.p,{children:["Please refer to section ",(0,n.jsxs)(s.a,{href:"/argo-messaging/docs/api_advanced/api_topics#get-list-acl-of-a-given-topic",children:["Topics",":List"," ACL of a given topic "]}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"post-modify-acl-of-a-given-topic",children:"[POST] Modify ACL of a given topic"}),"\n",(0,n.jsxs)(s.p,{children:["Please refer to\nsection ",(0,n.jsxs)(s.a,{href:"/argo-messaging/docs/api_advanced/api_topics#post-modify-acl-of-a-given-topic",children:["Topics",":Modify"," ACL of a given topic "]}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"get-list-acl-of-a-given-subscription",children:"[GET] List ACL of a given subscription"}),"\n",(0,n.jsx)(s.p,{children:"The following request returns a list of authorized users for a given subscription"}),"\n",(0,n.jsx)(s.h3,{id:"request",children:"Request"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"GET /v1/projects/{project_name}/subscriptions/{sub_name}:acl"})}),"\n",(0,n.jsx)(s.h3,{id:"where",children:"Where"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Project_name: Name of the project"}),"\n",(0,n.jsx)(s.li,{children:"sub_name: name of the subscription"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"example-request",children:"Example request"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'curl -X POST -H "Content-Type: application/json" -H "x-api-key: S3CR3T"  \n-d $POSTDATA "https://{URL}/v1/projects/EGI/subscriptions/monitoring:acl"\n'})}),"\n",(0,n.jsx)(s.h3,{id:"responses",children:"Responses"}),"\n",(0,n.jsxs)(s.p,{children:["Success Response\n",(0,n.jsx)(s.code,{children:"200 OK"})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{\n "authorized_users": [\n  "UserA","UserB"\n ]\n}\n'})}),"\n",(0,n.jsx)(s.h3,{id:"errors",children:"Errors"}),"\n",(0,n.jsxs)(s.p,{children:["Please refer to section ",(0,n.jsx)(s.a,{href:"/argo-messaging/docs/api_basic/api_errors",children:"Errors"})," to see all possible Errors"]}),"\n",(0,n.jsx)(s.h2,{id:"post-modify-acl-of-a-given-subscription",children:"[POST] Modify ACL of a given subscription"}),"\n",(0,n.jsx)(s.p,{children:"The following request Modifies the authorized users list of a given subscription"}),"\n",(0,n.jsx)(s.h3,{id:"request-1",children:"Request"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"POST /v1/projects/{project_name}/subscriptions/{sub_name}:modifyAcl"})}),"\n",(0,n.jsx)(s.h3,{id:"where-1",children:"Where"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Project_name: Name of the project"}),"\n",(0,n.jsx)(s.li,{children:"sub_name: name of the subscription"}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"post-data",children:"Post data"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{\n"authorized_users": [\n "UserX","UserY"\n]\n}\n'})}),"\n",(0,n.jsx)(s.h3,{id:"example-request-1",children:"Example request"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'curl -H "Content-Type: application/json" -H "x-api-key: S3CR3T" \n "https://{URL}/v1/projects/EGI/subscriptions/monitoring:modifyAcl"\n'})}),"\n",(0,n.jsx)(s.h3,{id:"responses-1",children:"Responses"}),"\n",(0,n.jsxs)(s.p,{children:["Success Response\n",(0,n.jsx)(s.code,{children:"200 OK"})]}),"\n",(0,n.jsx)(s.h3,{id:"errors-1",children:"Errors"}),"\n",(0,n.jsxs)(s.p,{children:["If the to-be updated ACL contains users that are non-existent in the project the API returns the following error:\n",(0,n.jsx)(s.code,{children:"404 NOT_FOUND"})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'{\n   "error": {\n      "code": 404,\n      "message": "User(s): UserFoo1,UserFoo2 do not exist",\n      "status": "NOT_FOUND"\n   }\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["Please refer to section ",(0,n.jsx)(s.a,{href:"/argo-messaging/docs/api_basic/api_errors",children:"Errors"})," to see all possible Errors"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>c});var n=i(6540);const t={},r=n.createContext(t);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);