"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6030],{1197:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});var i=n(4848),c=n(8453);const r={id:"projects_users",title:"Initial Project & User Management",sidebar_position:5},o=void 0,t={id:"concepts/projects_users",title:"Initial Project & User Management",description:"This document describes some of the more advanced setup you may need to do while configuring and deploying the ARGO Messaging Service.",source:"@site/docs/concepts/projects_users.md",sourceDirName:"concepts",slug:"/concepts/projects_users",permalink:"/argo-messaging/docs/concepts/projects_users",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"projects_users",title:"Initial Project & User Management",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Authentication & Authorization",permalink:"/argo-messaging/docs/concepts/auth"},next:{title:"Guides",permalink:"/argo-messaging/docs/category/guides"}},a={},d=[{value:"A typical quick-start scenario",id:"a-typical-quick-start-scenario",level:2},{value:"Configure <code>service_token</code>",id:"configure-service_token",level:2},{value:"Create a service_admin user",id:"create-a-service_admin-user",level:2},{value:"Create a project",id:"create-a-project",level:2},{value:"Create a project_admin",id:"create-a-project_admin",level:2},{value:"Create a topic",id:"create-a-topic",level:2},{value:"Create a subscription",id:"create-a-subscription",level:2},{value:"Create users for the new resources",id:"create-users-for-the-new-resources",level:2},{value:"Modify topic ACL to give access to publisher",id:"modify-topic-acl-to-give-access-to-publisher",level:3},{value:"Modify subscription ACL to give access to consumer",id:"modify-subscription-acl-to-give-access-to-consumer",level:3}];function l(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"This document describes some of the more advanced setup you may need to do while configuring and deploying the ARGO Messaging Service."}),"\n",(0,i.jsx)(s.h2,{id:"a-typical-quick-start-scenario",children:"A typical quick-start scenario"}),"\n",(0,i.jsx)(s.p,{children:"After a fresh install of the ARGO Messaging Service, the steps you need to follow are:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Configure ",(0,i.jsx)(s.code,{children:"service_token"}),": to enable the service."]}),"\n",(0,i.jsx)(s.li,{children:"Create a service_admin user: to start managing the service."}),"\n",(0,i.jsx)(s.li,{children:"Create a project: Project entities is used as a basis of organizing and isolating groups of users & resources"}),"\n",(0,i.jsx)(s.li,{children:"Create a project_admin user: Users that have the project_admin have, by default, all capabilities in their project. They can also manage resources such as topics and subscriptions (CRUD) and also manage ACLs (users) on those resources as well."}),"\n",(0,i.jsx)(s.li,{children:"Create a topic: The main resource that is scoped in a project, and can hold messages."}),"\n",(0,i.jsx)(s.li,{children:"Create a subscription: A subscription is the main resource from which users consume messages."}),"\n",(0,i.jsx)(s.li,{children:"Create users for the new resources: Usually a project has  publisher and consumer accounts for clients that either are authorized to publish or consume messages."}),"\n"]}),"\n",(0,i.jsxs)(s.h2,{id:"configure-service_token",children:["Configure ",(0,i.jsx)(s.code,{children:"service_token"})]}),"\n",(0,i.jsxs)(s.p,{children:["ARGO Messaging Service configuration includes the ",(0,i.jsx)(s.code,{children:"service_token"})," parameter. This ",(0,i.jsx)(s.code,{children:"service_token"})," configuration parameter can be used to create the first ",(0,i.jsx)(s.code,{children:"service_admin"})," user of the service"]}),"\n",(0,i.jsx)(s.p,{children:"First a service token must be defined in the config.json as such:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'{\n  "bind_ip":"",\n  "port":8080,\n  "zookeeper_hosts":["localhost"],\n  "kafka_znode":"",\n  "store_host":"localhost",\n  "store_db":"argo_msg",\n  "certificate":"/etc/pki/tls/certs/localhost.crt",\n  "certificate_key":"/etc/pki/tls/private/localhost.key",\n  "per_resource_auth":"true",\n  "service_token":"S3CR3T",\n  "push_enabled": false\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["The service token in this example has the value: ",(0,i.jsx)(s.code,{children:"S3CR3T"}),"\nThis ",(0,i.jsx)(s.code,{children:"service_token"})," is authorized for all available actions (projects,users,topics,subscriptions)."]}),"\n",(0,i.jsxs)(s.p,{children:["In order to enable the use of this ",(0,i.jsx)(s.code,{children:"service_token"})," you must restart the service."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"service argo-messaging restart\n"})}),"\n",(0,i.jsx)(s.h2,{id:"create-a-service_admin-user",children:"Create a service_admin user"}),"\n",(0,i.jsxs)(s.p,{children:["The service_token is intended to be used for the first initialization of the API. The first thing the service needs is a user with all possible capabilities, which is a ",(0,i.jsx)(s.code,{children:"service_admin"}),".\nNow even though no user has been initialized in the service, the administrator can use the ARGO Messaging API Call with service_token ",(0,i.jsx)(s.code,{children:"S3CR3T"})," to create the user.\nThe service_admin will be able to further define projects and other users."]}),"\n",(0,i.jsxs)(s.p,{children:["Using the service_token an admin can create a new service_admin user with the username ",(0,i.jsx)(s.code,{children:"demo_service_admin"})," by calling:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"POST https://{URL}/v1/users/demo_service_admin?key=S3CR3T\n"})}),"\n",(0,i.jsx)(s.p,{children:"with the following POST BODY:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "email":"sadmin@mail.example.foo",\n   "service_roles":["service_admin"]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["It is important to mention that the user has the ",(0,i.jsx)(s.strong,{children:'"service_admin"'})," role defined in the service_roles list in order to be a service_admin."]}),"\n",(0,i.jsx)(s.p,{children:"The response:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "projects": [],\n  "name": "demo_service_admin",\n  "token": "904c56cc6e2b1955dbd98ace80a45be8238432fc",\n  "email": "sadmin@mail.example.foo",\n  "service_roles": [\n    "service_admin"\n  ],\n  "created_on": "2016-10-13T11:19:07Z",\n  "modified_on": "2016-10-13T11:19:07Z"\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["The generated token ",(0,i.jsx)(s.code,{children:"904c56cc6e2b1955dbd98ace80a45be8238432fc"})," can be used to authenticate the new user.\nFor more details visit the ",(0,i.jsx)(s.a,{href:"/argo-messaging/docs/api_advanced/api_users",children:"API Users"})," to see all possible actions for users."]}),"\n",(0,i.jsx)(s.h2,{id:"create-a-project",children:"Create a project"}),"\n",(0,i.jsxs)(s.p,{children:["Using the ",(0,i.jsx)(s.code,{children:"demo_service_admin"})," account, the user can create the first project (ex named 'DEMO') by issuing:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"POST https://{URL}/v1/projects/DEMO?key=904c56cc6e2b1955dbd98ace80a45be8238432fc\n"})}),"\n",(0,i.jsx)(s.p,{children:"with the following POST BODY:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "description":"my first demo project"\n}\n'})}),"\n",(0,i.jsx)(s.p,{children:"and the response:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "name": "DEMO",\n  "created_on": "2016-10-13T12:19:07Z",\n  "modified_on": "2016-10-13T12:19:07Z",\n  "created_by": "demo_service_admin",\n  "description": "my first demo project"\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Response informs that the project has been indeed ",(0,i.jsx)(s.code,{children:"created_by"})," the ",(0,i.jsx)(s.code,{children:"demo_service_admin"})," user."]}),"\n",(0,i.jsxs)(s.p,{children:["For more details visit the ",(0,i.jsx)(s.a,{href:"/argo-messaging/docs/api_advanced/api_projects",children:"API Projects"})," to see all possible actions for projects."]}),"\n",(0,i.jsx)(s.h2,{id:"create-a-project_admin",children:"Create a project_admin"}),"\n",(0,i.jsxs)(s.p,{children:["Service_admin users are not attached to specific projects. Instead each project should have a ",(0,i.jsx)(s.code,{children:"project_admin"})," user that will manage topics, subscriptions and ACLs on those resources. To create a ",(0,i.jsx)(s.code,{children:"project_admin"})," user in project ",(0,i.jsx)(s.code,{children:"DEMO"}),", the user ",(0,i.jsx)(s.code,{children:"demo_service_admin"})," will issue:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"POST https://{URL}/v1/users/admin_DEMO?key=904c56cc6e2b1955dbd98ace80a45be8238432fc\n"})}),"\n",(0,i.jsx)(s.p,{children:"with the following POST BODY:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "email":"demoadmin@mail.example.foo",\n   "projects":[{"project":"DEMO","roles":["project_admin"]}]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["The user definition (in POST body) should have the field ",(0,i.jsx)(s.code,{children:"projects"})," defined. The field accepts a list of tuple items (project,roles) which describe each project that the user participates to and under which roles. A user can have multiple roles in a project and also participate in multiple projects as well. In this example, the user must participate in project ",(0,i.jsx)(s.code,{children:"DEMO"})," and under the role of ",(0,i.jsx)(s.code,{children:"project_admin"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"The response:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "projects": [\n    {\n      "project": "DEMO",\n      "roles": [\n        "project_admin"\n      ]\n    }\n  ],\n  "name": "admin_DEMO",\n  "token": "6311196665befcc1523b8e013979347b8780254c",\n  "email": "demoadmin@mail.example.foo",\n  "service_roles": [],\n  "created_on": "2016-10-13T12:29:07Z",\n  "modified_on": "2016-10-13T12:29:07Z",\n  "created_by": "demo_service_admin"\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["For more details visit the ",(0,i.jsx)(s.a,{href:"/argo-messaging/docs/api_advanced/api_users",children:"API Users"})," to see all possible actions for users."]}),"\n",(0,i.jsx)(s.h2,{id:"create-a-topic",children:"Create a topic"}),"\n",(0,i.jsxs)(s.p,{children:["Service_admin users don't manage resources such as topics/subscriptions. Instead in each project the project_admin is eligible for creating (and managing) topics and subscriptions. To create a new topic (named ",(0,i.jsx)(s.code,{children:"topic101"}),") as ",(0,i.jsx)(s.code,{children:"admin_DEMO"})," user in project ",(0,i.jsx)(s.code,{children:"DEMO"})," the user issues:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"PUT https://{URL}/v1/projects/DEMO/topics/topic101?key=6311196665befcc1523b8e013979347b8780254c\n"})}),"\n",(0,i.jsx)(s.p,{children:"with response:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'{\n  "name": "/projects/DEMO/topics/topic101"\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Notice that the token used in api ",(0,i.jsx)(s.code,{children:"key"})," changes to that of the ",(0,i.jsx)(s.code,{children:"admin_DEMO"})," user"]}),"\n",(0,i.jsxs)(s.p,{children:["For more details visit the ",(0,i.jsx)(s.a,{href:"/argo-messaging/docs/api_advanced/api_topics",children:"API Topics"})," to see all possible actions for topics."]}),"\n",(0,i.jsx)(s.h2,{id:"create-a-subscription",children:"Create a subscription"}),"\n",(0,i.jsxs)(s.p,{children:["To create a new subscription (named ",(0,i.jsx)(s.code,{children:"sub101"}),") to topic ",(0,i.jsx)(s.code,{children:"topic101"})," of project ",(0,i.jsx)(s.code,{children:"DEMO"})," the ",(0,i.jsx)(s.code,{children:"admin_DEMO"})," user issues:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"PUT https://{URL}/v1/projects/DEMO/subscriptions/subs101?key=6311196665befcc1523b8e013979347b8780254c\n"})}),"\n",(0,i.jsx)(s.p,{children:"with POST Body:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "topic":"projects/DEMO/topic/topic101"\n}\n'})}),"\n",(0,i.jsx)(s.p,{children:"and response:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "name": "/projects/DEMO/subscriptions/sub101",\n  "topic": "/projects/DEMO/topics/topic101",\n  "pushConfig": {\n    "pushEndpoint": "",\n    "retryPolicy": {}\n  },\n  "ackDeadlineSeconds": 10\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["For more details visit the ",(0,i.jsx)(s.a,{href:"/argo-messaging/docs/api_advanced/api_subscriptions",children:"API Subscriptions"})," to see all possible actions for Subscriptions."]}),"\n",(0,i.jsx)(s.h2,{id:"create-users-for-the-new-resources",children:"Create users for the new resources"}),"\n",(0,i.jsxs)(s.p,{children:["Usually a project will have also publisher and consumer accounts for clients that either are authorized to publish or consume messages. The user ",(0,i.jsx)(s.code,{children:"demo_service_admin"})," can create a ",(0,i.jsx)(s.code,{children:"publisher_DEMO"})," and ",(0,i.jsx)(s.code,{children:"consumer_DEMO"})," for project ",(0,i.jsx)(s.code,{children:"DEMO"})," as such:"]}),"\n",(0,i.jsxs)(s.p,{children:["To create the ",(0,i.jsx)(s.code,{children:"publisher_DEMO"})," user:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"POST https://{URL}/v1/users/publisher_DEMO?key=904c56cc6e2b1955dbd98ace80a45be8238432fc\n"})}),"\n",(0,i.jsx)(s.p,{children:"with POST Body:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "email":"demopublisher@mail.example.foo",\n   "projects":[{"project":"DEMO","roles":["publisher"]}]\n}\n'})}),"\n",(0,i.jsx)(s.p,{children:"resulting in response:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "projects": [\n    {\n      "project": "DEMO",\n      "roles": [\n        "publisher"\n      ]\n    }\n  ],\n  "name": "publisher_DEMO",\n  "token": "915dff62846dd1d790b4296c034c184fa3a859b6",\n  "email": "demopublisher@mail.example.foo",\n  "service_roles": [],\n  "created_on": "2016-10-13T12:39:07Z",\n  "modified_on": "2016-10-13T12:39:07Z",\n  "created_by" : "demo_service_admin"\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["To create the ",(0,i.jsx)(s.code,{children:"consumer_DEMO"})," user:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"POST https://{URL}/v1/users/consumer_DEMO?key=904c56cc6e2b1955dbd98ace80a45be8238432fc\n"})}),"\n",(0,i.jsx)(s.p,{children:"with POST Body:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "email":"democonsumer@mail.example.foo",\n   "projects":[{"project":"DEMO","roles":["consumer"]}]\n}\n'})}),"\n",(0,i.jsx)(s.p,{children:"resulting in response:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n  "projects": [\n    {\n      "project": "DEMO",\n      "roles": [\n        "consumer"\n      ]\n    }\n  ],\n  "name": "consumer_DEMO",\n  "token": "dba38fd1a45337a617a59e7278c756f23642e9e7",\n  "email": "democonsumer@mail.example.foo",\n  "service_roles": [],\n  "created_on": "2016-10-13T12:40:07Z",\n  "modified_on": "2016-10-13T12:40:07Z",\n  "created_by" : "demo_service_admin"\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["For more details visit the ",(0,i.jsx)(s.a,{href:"/argo-messaging/docs/api_advanced/api_users",children:"API Users"})," to see all possible actions for users."]}),"\n",(0,i.jsx)(s.h3,{id:"modify-topic-acl-to-give-access-to-publisher",children:"Modify topic ACL to give access to publisher"}),"\n",(0,i.jsxs)(s.p,{children:["In order to give access to user ",(0,i.jsx)(s.code,{children:"publisher_DEMO"})," to topic ",(0,i.jsx)(s.code,{children:"topic101"}),", the user ",(0,i.jsx)(s.code,{children:"admin_DEMO"})," must modify the topic's ACL as such:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"POST https://{URL}/v1/projects/DEMO/topics/topic101:modifyAcl?key=6311196665befcc1523b8e013979347b8780254c\n"})}),"\n",(0,i.jsx)(s.p,{children:"with POST body:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "authorized_users":["publisher_DEMO"]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["and empty response with ",(0,i.jsx)(s.code,{children:"200 OK"})]}),"\n",(0,i.jsxs)(s.p,{children:["Now the user ",(0,i.jsx)(s.code,{children:"publisher_DEMO"})," will be authorized to call action ",(0,i.jsx)(s.code,{children:"topic:publish"})," on ",(0,i.jsx)(s.code,{children:"topic101"})," and send messages"]}),"\n",(0,i.jsx)(s.h3,{id:"modify-subscription-acl-to-give-access-to-consumer",children:"Modify subscription ACL to give access to consumer"}),"\n",(0,i.jsxs)(s.p,{children:["In order to give access to user ",(0,i.jsx)(s.code,{children:"consumer_DEMO"})," to subscription ",(0,i.jsx)(s.code,{children:"sub101"}),", the user ",(0,i.jsx)(s.code,{children:"admin_DEMO"})," must modify the subscription's  ACL as such:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"POST https://{URL}/v1/projects/DEMO/subscriptions/sub101:modifyAcl?key=6311196665befcc1523b8e013979347b8780254c\n"})}),"\n",(0,i.jsx)(s.p,{children:"with POST body:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-json",children:'{\n   "authorized_users":["consumer_DEMO"]\n}\n'})}),"\n",(0,i.jsxs)(s.p,{children:["and empty response with ",(0,i.jsx)(s.code,{children:"200 OK"})]}),"\n",(0,i.jsxs)(s.p,{children:["Now the user ",(0,i.jsx)(s.code,{children:"consumer_DEMO"})," will be authorized to call action ",(0,i.jsx)(s.code,{children:"subscription:pull"})," on ",(0,i.jsx)(s.code,{children:"sub101"})," and consume messages"]})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>t});var i=n(6540);const c={},r=i.createContext(c);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);