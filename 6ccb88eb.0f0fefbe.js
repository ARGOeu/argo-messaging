(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{69:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),r=n(6),o=(n(0),n(93)),i={id:"api_basic",title:"Service introduction and configuration"},c={unversionedId:"api_basic",id:"api_basic",isDocsHomePage:!1,title:"Service introduction and configuration",description:"Introduction",source:"@site/docs/api_basic.md",permalink:"/argo-messaging/docs/api_basic",sidebar:"someSidebar",previous:{title:"Initial Project & User Management",permalink:"/argo-messaging/docs/projects_users"},next:{title:"API Errors",permalink:"/argo-messaging/docs/api_errors"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Configuration file: config.json",id:"configuration-file-configjson",children:[{value:"Explanation of config parameters:",id:"explanation-of-config-parameters",children:[]}]},{value:"Command line parameters",id:"command-line-parameters",children:[]}],s={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"The ARGO Messaging Service API implements the Google PubSub specification and thus supports HTTP RPC-style methods in the form of:"),Object(o.b)("p",null," ",Object(o.b)("inlineCode",{parentName:"p"},"https://messaging.argo.grnet.gr/api/projects/METHOD")),Object(o.b)("p",null,"All methods must be called using HTTPS. Arguments can be passed as GET or POST params, or a mix. The response contains a ",Object(o.b)("inlineCode",{parentName:"p"},"200 OK")," for a successful request and a JSON object in case of an error. For failure results, the error property will contain a short machine-readable error code. In the case of problematic calls,  during handling user\u2019s request the API responds using a predefined schema (described in chapter Errors), that contains a short machine-readable warning code, an error code and an error description  (or list of them, in the case of multiple errors)."),Object(o.b)("p",null,"Each user is authenticated by adding the url parameter ",Object(o.b)("inlineCode",{parentName:"p"},"?key=T0K3N")," in each API request"),Object(o.b)("h2",{id:"configuration-file-configjson"},"Configuration file: config.json"),Object(o.b)("p",null,"The first step for using the messaging API is to edit the main configuration file."),Object(o.b)("p",null,"The ARGO Messaging Service main configuration file is config.json. An example configuration is listed below:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "bind_ip":"",\n  "port":8080,\n  "zookeeper_hosts":["localhost"],\n  "kafka_znode":"",\n  "store_host":"localhost",\n  "store_db":"argo_msg",\n  "certificate":"/etc/pki/tls/certs/localhost.crt",\n  "certificate_key":"/etc/pki/tls/private/localhost.key",\n  "per_resource_auth":true,\n  "service_token":"S0M3T0K3N",\n  "log_level":"INFO",\n  "log_facilities": ["syslog", "console"]\n}\n')),Object(o.b)("h3",{id:"explanation-of-config-parameters"},"Explanation of config parameters:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Parameter"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"bind_ip"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the ip address to listen to.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"port"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The port where the API will listen to")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"zookeeper_hosts"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"List of zookeeper instances that are used to sync kafka")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"kafka_znode"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'The znode under which Kafka writes its data on Zookeeper. Default is "" meaning the root node')),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"store_host"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Address:port of the datastore server")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"store_db"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Database name used on the datastore server")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"certificate"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"path to the node's TLS certificate file")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"certificate_key"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"path to the certificate's private key")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"per_resource_auth"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"enable authorization per resource (topic/subscription)")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"service_token"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"(optional) If set, enables full service-wide access to the api to initialize projects,users and resources")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"log_level"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),'set the desired log level (defaults to "INFO")')),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"log_facilities"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"logging output, if left empty, it defaults to console)")))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Location of config.json"),": API will look first for config.json locally in the folder where the executable runs and then in the ",Object(o.b)("inlineCode",{parentName:"p"}," /etc/argo-messaging/"),"  location."),Object(o.b)("h2",{id:"command-line-parameters"},"Command line parameters"),Object(o.b)("p",null,"Apart from configuration file, argo-messaging service accepts configuration parameters in the command line. The list of the available command line parameters is displayed\nif the user issues"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"./argo-messaging-service --help\n")),Object(o.b)("p",null,"The available command line parameters are listed as follows:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'--bind-ip string           ip address to listen to (default "localhost")\n--certificate string       certificate file *.crt (default "/etc/pki/tls/certs/localhost.crt")\n--certificate-key string   certificate key file *.key (default "/etc/pki/tls/private/localhost.key")\n--config-dir string        directory path to an alternative json config file\n--kafka-znode string       kafka zookeeper node name\n--log-level string         set the desired log level\n--per-resource-auth        enable per resource authentication (default true)\n--port int                 port number to listen to (default 8080)\n--service-key string       service token definition for immediate full api access\n--store-db string          datastore (mongodb) database name (default "argo_msg")\n--store-host string        datastore (mongodb) host (default "localhost")\n--zookeeper-hosts value    list of zookeeper hosts to connect to (default [localhost])\n')),Object(o.b)("p",null,"User can optionally specifiy an alternative configuration file directory with the use of the ",Object(o.b)("inlineCode",{parentName:"p"},"--config-dir")," parameter\nFor example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"./argo-messaging-service --config-dir=/root/alternative/config/\n")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"/root/alternative/config/config.json")," must exist"))}b.isMDXComponent=!0},93:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,m=p["".concat(i,".").concat(u)]||p[u]||d[u]||o;return n?r.a.createElement(m,c(c({ref:t},s),{},{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);