// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ams.proto

package ams

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Empty wrapper for status request call
type SubscriptionStatusRequest struct {
	// Required. The full resource name of the subscrption.
	FullName             string   `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionStatusRequest) Reset()         { *m = SubscriptionStatusRequest{} }
func (m *SubscriptionStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SubscriptionStatusRequest) ProtoMessage()    {}
func (*SubscriptionStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{0}
}

func (m *SubscriptionStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionStatusRequest.Unmarshal(m, b)
}
func (m *SubscriptionStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionStatusRequest.Marshal(b, m, deterministic)
}
func (m *SubscriptionStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionStatusRequest.Merge(m, src)
}
func (m *SubscriptionStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SubscriptionStatusRequest.Size(m)
}
func (m *SubscriptionStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionStatusRequest proto.InternalMessageInfo

func (m *SubscriptionStatusRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

// Empty wrapper for status response call
type SubscriptionStatusResponse struct {
	// Required. The full resource name of the subscrption.
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriptionStatusResponse) Reset()         { *m = SubscriptionStatusResponse{} }
func (m *SubscriptionStatusResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionStatusResponse) ProtoMessage()    {}
func (*SubscriptionStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{1}
}

func (m *SubscriptionStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionStatusResponse.Unmarshal(m, b)
}
func (m *SubscriptionStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionStatusResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionStatusResponse.Merge(m, src)
}
func (m *SubscriptionStatusResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionStatusResponse.Size(m)
}
func (m *SubscriptionStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionStatusResponse proto.InternalMessageInfo

func (m *SubscriptionStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

// Empty wrapper for status request call
type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{2}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

// Empty wrapper for status response call
type StatusResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{3}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

// Wrapper for subscription
type DeactivateSubscriptionResponse struct {
	// Message response
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateSubscriptionResponse) Reset()         { *m = DeactivateSubscriptionResponse{} }
func (m *DeactivateSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*DeactivateSubscriptionResponse) ProtoMessage()    {}
func (*DeactivateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{4}
}

func (m *DeactivateSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateSubscriptionResponse.Unmarshal(m, b)
}
func (m *DeactivateSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *DeactivateSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateSubscriptionResponse.Merge(m, src)
}
func (m *DeactivateSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_DeactivateSubscriptionResponse.Size(m)
}
func (m *DeactivateSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateSubscriptionResponse proto.InternalMessageInfo

func (m *DeactivateSubscriptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Contains which subscription to deactivate
type DeactivateSubscriptionRequest struct {
	// Required. The full resource name of the subscrption.
	FullName             string   `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeactivateSubscriptionRequest) Reset()         { *m = DeactivateSubscriptionRequest{} }
func (m *DeactivateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateSubscriptionRequest) ProtoMessage()    {}
func (*DeactivateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{5}
}

func (m *DeactivateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateSubscriptionRequest.Unmarshal(m, b)
}
func (m *DeactivateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *DeactivateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateSubscriptionRequest.Merge(m, src)
}
func (m *DeactivateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_DeactivateSubscriptionRequest.Size(m)
}
func (m *DeactivateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateSubscriptionRequest proto.InternalMessageInfo

func (m *DeactivateSubscriptionRequest) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

// Wrapper for subscription
type ActivateSubscriptionResponse struct {
	// Message response
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivateSubscriptionResponse) Reset()         { *m = ActivateSubscriptionResponse{} }
func (m *ActivateSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*ActivateSubscriptionResponse) ProtoMessage()    {}
func (*ActivateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{6}
}

func (m *ActivateSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateSubscriptionResponse.Unmarshal(m, b)
}
func (m *ActivateSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateSubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *ActivateSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateSubscriptionResponse.Merge(m, src)
}
func (m *ActivateSubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_ActivateSubscriptionResponse.Size(m)
}
func (m *ActivateSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateSubscriptionResponse proto.InternalMessageInfo

func (m *ActivateSubscriptionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Wrapper for subscription.
type ActivateSubscriptionRequest struct {
	// Required. A subscription.
	Subscription         *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ActivateSubscriptionRequest) Reset()         { *m = ActivateSubscriptionRequest{} }
func (m *ActivateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateSubscriptionRequest) ProtoMessage()    {}
func (*ActivateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{7}
}

func (m *ActivateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateSubscriptionRequest.Unmarshal(m, b)
}
func (m *ActivateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *ActivateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateSubscriptionRequest.Merge(m, src)
}
func (m *ActivateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateSubscriptionRequest.Size(m)
}
func (m *ActivateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateSubscriptionRequest proto.InternalMessageInfo

func (m *ActivateSubscriptionRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

// Subscription holds informaton related to how the push functionality should operate.
type Subscription struct {
	// Required. The full resource name of the subscription.
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// The full topic name of the topic that the subscription is associated.
	FullTopic string `protobuf:"bytes,2,opt,name=full_topic,json=fullTopic,proto3" json:"full_topic,omitempty"`
	// Required. Information regarding the push functionality.
	PushConfig           *PushConfig `protobuf:"bytes,4,opt,name=push_config,json=pushConfig,proto3" json:"push_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{8}
}

func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Subscription) GetFullTopic() string {
	if m != nil {
		return m.FullTopic
	}
	return ""
}

func (m *Subscription) GetPushConfig() *PushConfig {
	if m != nil {
		return m.PushConfig
	}
	return nil
}

// PushConfig holds information on how a push subscription functions.
type PushConfig struct {
	// Required. An https endpoint to where the messages will be pushed.
	PushEndpoint string `protobuf:"bytes,1,opt,name=push_endpoint,json=pushEndpoint,proto3" json:"push_endpoint,omitempty"`
	// Defaults to 1. How many messages should the push server consume and sent at once.
	MaxMessages int64 `protobuf:"varint,3,opt,name=max_messages,json=maxMessages,proto3" json:"max_messages,omitempty"`
	// Required. Retry policy.
	RetryPolicy *RetryPolicy `protobuf:"bytes,2,opt,name=retry_policy,json=retryPolicy,proto3" json:"retry_policy,omitempty"`
	// Required. Authorization header that the sent messages should include into the request
	AuthorizationHeader  string   `protobuf:"bytes,4,opt,name=authorization_header,json=authorizationHeader,proto3" json:"authorization_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushConfig) Reset()         { *m = PushConfig{} }
func (m *PushConfig) String() string { return proto.CompactTextString(m) }
func (*PushConfig) ProtoMessage()    {}
func (*PushConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{9}
}

func (m *PushConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushConfig.Unmarshal(m, b)
}
func (m *PushConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushConfig.Marshal(b, m, deterministic)
}
func (m *PushConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushConfig.Merge(m, src)
}
func (m *PushConfig) XXX_Size() int {
	return xxx_messageInfo_PushConfig.Size(m)
}
func (m *PushConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PushConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PushConfig proto.InternalMessageInfo

func (m *PushConfig) GetPushEndpoint() string {
	if m != nil {
		return m.PushEndpoint
	}
	return ""
}

func (m *PushConfig) GetMaxMessages() int64 {
	if m != nil {
		return m.MaxMessages
	}
	return 0
}

func (m *PushConfig) GetRetryPolicy() *RetryPolicy {
	if m != nil {
		return m.RetryPolicy
	}
	return nil
}

func (m *PushConfig) GetAuthorizationHeader() string {
	if m != nil {
		return m.AuthorizationHeader
	}
	return ""
}

// RetryPolicy holds information regarding the retry policy.
type RetryPolicy struct {
	// Required. Type of the retry policy used (Only linear policy supported).
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Required. Retry period in milliseconds.
	Period               uint32   `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryPolicy) Reset()         { *m = RetryPolicy{} }
func (m *RetryPolicy) String() string { return proto.CompactTextString(m) }
func (*RetryPolicy) ProtoMessage()    {}
func (*RetryPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_85e4db6795b5b1aa, []int{10}
}

func (m *RetryPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryPolicy.Unmarshal(m, b)
}
func (m *RetryPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryPolicy.Marshal(b, m, deterministic)
}
func (m *RetryPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryPolicy.Merge(m, src)
}
func (m *RetryPolicy) XXX_Size() int {
	return xxx_messageInfo_RetryPolicy.Size(m)
}
func (m *RetryPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_RetryPolicy proto.InternalMessageInfo

func (m *RetryPolicy) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RetryPolicy) GetPeriod() uint32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func init() {
	proto.RegisterType((*SubscriptionStatusRequest)(nil), "SubscriptionStatusRequest")
	proto.RegisterType((*SubscriptionStatusResponse)(nil), "SubscriptionStatusResponse")
	proto.RegisterType((*StatusRequest)(nil), "StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "StatusResponse")
	proto.RegisterType((*DeactivateSubscriptionResponse)(nil), "DeactivateSubscriptionResponse")
	proto.RegisterType((*DeactivateSubscriptionRequest)(nil), "DeactivateSubscriptionRequest")
	proto.RegisterType((*ActivateSubscriptionResponse)(nil), "ActivateSubscriptionResponse")
	proto.RegisterType((*ActivateSubscriptionRequest)(nil), "ActivateSubscriptionRequest")
	proto.RegisterType((*Subscription)(nil), "Subscription")
	proto.RegisterType((*PushConfig)(nil), "PushConfig")
	proto.RegisterType((*RetryPolicy)(nil), "RetryPolicy")
}

func init() { proto.RegisterFile("ams.proto", fileDescriptor_85e4db6795b5b1aa) }

var fileDescriptor_85e4db6795b5b1aa = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x6e, 0xb7, 0xa9, 0xd0, 0x97, 0x74, 0x43, 0x8f, 0x69, 0x0a, 0xe9, 0x3a, 0x86, 0xb9, 0x4c,
	0x02, 0x19, 0xad, 0x70, 0x18, 0x88, 0xcb, 0x04, 0x48, 0x5c, 0x80, 0xca, 0x85, 0x13, 0x87, 0xc8,
	0x4b, 0xbd, 0xd5, 0x52, 0x13, 0x1b, 0xdb, 0x99, 0x5a, 0x7e, 0x19, 0x37, 0xfe, 0x1a, 0x8a, 0x49,
	0xb7, 0x06, 0xda, 0x08, 0x71, 0xf3, 0xfb, 0x9e, 0x3f, 0x7f, 0xcf, 0xcf, 0xef, 0x33, 0x74, 0x79,
	0x66, 0xa9, 0x36, 0xca, 0x29, 0x72, 0x06, 0x0f, 0xc6, 0xc5, 0x85, 0x4d, 0x8d, 0xd4, 0x4e, 0xaa,
	0x7c, 0xec, 0xb8, 0x2b, 0x2c, 0x13, 0xdf, 0x0a, 0x61, 0x1d, 0xf6, 0xa1, 0x7b, 0x59, 0xcc, 0x66,
	0x49, 0xce, 0x33, 0x11, 0xb5, 0x8f, 0xdb, 0x27, 0x5d, 0x76, 0xb7, 0x04, 0x3e, 0xf2, 0x4c, 0x90,
	0x17, 0x10, 0xaf, 0x63, 0x5a, 0xad, 0x72, 0x2b, 0xf0, 0x00, 0x3a, 0xd6, 0x23, 0x15, 0xaf, 0x8a,
	0xc8, 0x1e, 0xf4, 0x6a, 0x1a, 0xe4, 0x1e, 0xec, 0xd6, 0xa9, 0xe4, 0x15, 0x1c, 0xbd, 0x15, 0x3c,
	0x75, 0xf2, 0x9a, 0x3b, 0xb1, 0x2a, 0x71, 0x73, 0x78, 0x04, 0x77, 0x32, 0x61, 0x2d, 0xbf, 0x5a,
	0x56, 0xb5, 0x0c, 0xc9, 0x6b, 0x18, 0x6c, 0xe2, 0xfe, 0xc3, 0x95, 0xce, 0xe0, 0xf0, 0xfc, 0xff,
	0x74, 0x47, 0xd0, 0x3f, 0x6f, 0x50, 0x3d, 0x85, 0xd0, 0xae, 0xc0, 0x9e, 0x1d, 0x0c, 0x7b, 0xb4,
	0xb6, 0xb7, 0xb6, 0x85, 0xcc, 0x21, 0x5c, 0xcd, 0x36, 0x16, 0x8e, 0x03, 0x00, 0x9f, 0x74, 0x4a,
	0xcb, 0x34, 0xda, 0xf2, 0x59, 0xbf, 0xfd, 0x73, 0x09, 0xe0, 0x53, 0x08, 0x74, 0x61, 0xa7, 0x49,
	0xaa, 0xf2, 0x4b, 0x79, 0x15, 0xed, 0x78, 0xf5, 0x80, 0x8e, 0x0a, 0x3b, 0x7d, 0xe3, 0x21, 0x06,
	0xfa, 0x66, 0x4d, 0x7e, 0xb4, 0x01, 0x6e, 0x53, 0xf8, 0x18, 0x7a, 0x9e, 0x2c, 0xf2, 0x89, 0x56,
	0x32, 0x77, 0x95, 0x78, 0x58, 0x82, 0xef, 0x2a, 0x0c, 0x1f, 0x41, 0x98, 0xf1, 0x79, 0x52, 0xb5,
	0xc3, 0x46, 0xdb, 0xc7, 0xed, 0x93, 0x6d, 0x16, 0x64, 0x7c, 0xfe, 0xa1, 0x82, 0xf0, 0x19, 0x84,
	0x46, 0x38, 0xb3, 0x48, 0xb4, 0x9a, 0xc9, 0x74, 0xe1, 0xab, 0x0c, 0x86, 0x21, 0x65, 0x25, 0x38,
	0xf2, 0x18, 0x0b, 0xcc, 0x6d, 0x80, 0xa7, 0xb0, 0xcf, 0x0b, 0x37, 0x55, 0x46, 0x7e, 0xe7, 0x65,
	0x0b, 0x92, 0xa9, 0xe0, 0x13, 0x61, 0x7c, 0xf9, 0x5d, 0x76, 0xbf, 0x96, 0x7b, 0xef, 0x53, 0xe4,
	0x25, 0x04, 0x2b, 0xc7, 0x21, 0xc2, 0x8e, 0x5b, 0xe8, 0x65, 0xbb, 0xfc, 0xba, 0x1c, 0x4c, 0x2d,
	0x8c, 0x54, 0x13, 0x5f, 0x40, 0x8f, 0x55, 0xd1, 0xf0, 0xe7, 0x16, 0x04, 0xe5, 0xad, 0xc7, 0xc2,
	0x5c, 0xcb, 0x54, 0xe0, 0x17, 0xd8, 0x5f, 0xf7, 0xa2, 0x78, 0x48, 0x1b, 0x1e, 0x3a, 0x1e, 0xd0,
	0xa6, 0x01, 0x22, 0x2d, 0xfc, 0x0a, 0x07, 0xeb, 0x07, 0x14, 0x8f, 0x68, 0xe3, 0xe4, 0xc6, 0x0f,
	0x69, 0xb3, 0x2b, 0x48, 0x0b, 0x9f, 0x40, 0xe7, 0xb7, 0x97, 0x70, 0x97, 0xd6, 0x5c, 0x16, 0xef,
	0xd1, 0x3f, 0x4c, 0xd6, 0xc2, 0x4f, 0x80, 0x7f, 0xfb, 0x17, 0x63, 0xba, 0xf1, 0x3b, 0x88, 0xfb,
	0x74, 0xb3, 0xe1, 0x49, 0xeb, 0xa2, 0xe3, 0x7f, 0x94, 0xe7, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x9c, 0x92, 0xc0, 0xda, 0x5e, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushServiceClient is the client API for PushService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushServiceClient interface {
	// Activates a subscription in order for the service to start handling the push functionality
	ActivateSubscription(ctx context.Context, in *ActivateSubscriptionRequest, opts ...grpc.CallOption) (*ActivateSubscriptionResponse, error)
	//  Deactivates a subscription in order for the service to stop handling the push functionality
	DeactivateSubscription(ctx context.Context, in *DeactivateSubscriptionRequest, opts ...grpc.CallOption) (*DeactivateSubscriptionResponse, error)
	//  Status returns the current state of the service
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// SubscriptionStatus returns the status of the worker that handles the respective subscription
	SubscriptionStatus(ctx context.Context, in *SubscriptionStatusRequest, opts ...grpc.CallOption) (*SubscriptionStatusResponse, error)
}

type pushServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushServiceClient(cc *grpc.ClientConn) PushServiceClient {
	return &pushServiceClient{cc}
}

func (c *pushServiceClient) ActivateSubscription(ctx context.Context, in *ActivateSubscriptionRequest, opts ...grpc.CallOption) (*ActivateSubscriptionResponse, error) {
	out := new(ActivateSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/PushService/ActivateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) DeactivateSubscription(ctx context.Context, in *DeactivateSubscriptionRequest, opts ...grpc.CallOption) (*DeactivateSubscriptionResponse, error) {
	out := new(DeactivateSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/PushService/DeactivateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/PushService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pushServiceClient) SubscriptionStatus(ctx context.Context, in *SubscriptionStatusRequest, opts ...grpc.CallOption) (*SubscriptionStatusResponse, error) {
	out := new(SubscriptionStatusResponse)
	err := c.cc.Invoke(ctx, "/PushService/SubscriptionStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServiceServer is the server API for PushService service.
type PushServiceServer interface {
	// Activates a subscription in order for the service to start handling the push functionality
	ActivateSubscription(context.Context, *ActivateSubscriptionRequest) (*ActivateSubscriptionResponse, error)
	//  Deactivates a subscription in order for the service to stop handling the push functionality
	DeactivateSubscription(context.Context, *DeactivateSubscriptionRequest) (*DeactivateSubscriptionResponse, error)
	//  Status returns the current state of the service
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	// SubscriptionStatus returns the status of the worker that handles the respective subscription
	SubscriptionStatus(context.Context, *SubscriptionStatusRequest) (*SubscriptionStatusResponse, error)
}

func RegisterPushServiceServer(s *grpc.Server, srv PushServiceServer) {
	s.RegisterService(&_PushService_serviceDesc, srv)
}

func _PushService_ActivateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).ActivateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PushService/ActivateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).ActivateSubscription(ctx, req.(*ActivateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_DeactivateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).DeactivateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PushService/DeactivateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).DeactivateSubscription(ctx, req.(*DeactivateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PushService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PushService_SubscriptionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscriptionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServiceServer).SubscriptionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PushService/SubscriptionStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServiceServer).SubscriptionStatus(ctx, req.(*SubscriptionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PushService",
	HandlerType: (*PushServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivateSubscription",
			Handler:    _PushService_ActivateSubscription_Handler,
		},
		{
			MethodName: "DeactivateSubscription",
			Handler:    _PushService_DeactivateSubscription_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _PushService_Status_Handler,
		},
		{
			MethodName: "SubscriptionStatus",
			Handler:    _PushService_SubscriptionStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ams.proto",
}
