(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{75:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return a})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return l}));var n=r(2),i=r(6),s=(r(0),r(89)),o={id:"subscriber-pull_guide",title:"Receiving messages using Pull"},a={unversionedId:"subscriber-pull_guide",id:"subscriber-pull_guide",isDocsHomePage:!1,title:"Receiving messages using Pull",description:"Subscribers can read messages from named-channels called Subscriptions.  Each subscription can belong to a single topic. A topic though can have multiple subscriptions.",source:"@site/docs/subscriber-pull_guide.md",permalink:"/argo-messaging/docs/subscriber-pull_guide",sidebar:"someSidebar",previous:{title:"Subscriber Guide",permalink:"/argo-messaging/docs/subscriber_guide"},next:{title:"Receiving messages using Push",permalink:"/argo-messaging/docs/subscriber-push_guide"}},c=[{value:"Before you start",id:"before-you-start",children:[]}],u={rightToc:c};function l(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Subscribers can read messages from named-channels called Subscriptions.  Each subscription can belong to a single topic. A topic though can have multiple subscriptions.\nIf you are a subscriber and you want to receive messages published to a topic, the idea is that you should create a subscription to that topic.\nThe subscription is the connection of the topic to a specific application, and its fuction is to receive and process messages published to the topic.\nOnly messages published to the topic after the subscription is created are available to subscriber applications. "),Object(s.b)("p",null,"AMS supports both push and pull message delivery. In push delivery, the Messaging Service initiates requests to your subscriber application to deliver messages.\nIn pull delivery, your subscription application initiates requests to the Pub/Sub server to retrieve messages."),Object(s.b)("p",null,Object(s.b)("strong",{parentName:"p"},"Pull subscriptions"),"\nPull subscriptions can be configured to require that message deliveries are acknowledged by the Subscribers. If an acknowledgement is made, subscription can resume progressing and send the next available messages. If no acknowledgement is made subscription pauses progressing and re-sends the same messages. In a pull subscription, the subscribing application explicitly calls the API pull method, which requests delivery of a message in the subscription queue. The Pub/Sub server responds with the message (or an error if the queue is empty), and an ack ID. The subscriber then explicitly calls the acknowledge method, using the returned ack ID, to acknowledge receipt."),Object(s.b)("h2",{id:"before-you-start"},"Before you start"),Object(s.b)("p",null,"In order to get an account on the ARGO Messaging Service, submit a request through the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.google.com/forms/d/e/1FAIpQLScfMCYPkUqUa5lT046RK1yCR4yn6M96WbgD5DMlNJ-zRFHSRA/viewform"}),"ARGO Messaging Service account form")),Object(s.b)("p",null,"Upon account approval, you will receive information via e-mail about your new project along with an API token."))}l.isMDXComponent=!0},89:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return g}));var n=r(0),i=r.n(n);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=i.a.createContext({}),l=function(e){var t=i.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),d=n,g=p["".concat(o,".").concat(d)]||p[d]||b[d]||s;return r?i.a.createElement(g,a(a({ref:t},u),{},{components:r})):i.a.createElement(g,a({ref:t},u))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:n,o[1]=a;for(var u=2;u<s;u++)o[u]=r[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);