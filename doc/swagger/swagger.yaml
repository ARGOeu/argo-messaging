# ARGO Messaging API expressed in swagger
swagger: '2.0'
info:
  title: argo-messaging-api
  description: "ARGO is a lightweight service for Service Level Monitoring designed for medium and large sized e-Infrastructures. This swagger UI interface provides access to the specification of the ARGO messaging api, which can be used to produce or consume messages."
  version: "0.9.2"
  contact:
    name: ARGO Developers
    url: http://argoeu.github.io/
    email: argo-dev@lists.grnet.gr

host: localhost
schemes:
  - https

basePath: /v1
produces:
  - application/json
tags:
  - name: Subscriptions
    description: Subscriptions under a given project
  - name: Topics
    description: Topics under a given project
  - name: Projects
    description: Projects available in the service
  - name: Schemas
    description: Available schemas under a project for validating published messages payload
paths:

  /projects/{PROJECT}/schemas:
    get:
      summary: Retrieve all schemas under a project
      description: |
        Retrieve all schemas under a project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
      tags:
        - Schemas
      responses:
        200:
          description: A List of schemas
          schema:
            $ref: '#/definitions/SchemaList'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/schemas/{SCHEMA}:validate:
    post:
      summary: Validate a specific message against the provided schema
      description: |
        Validate explicitily a message against the provided schema.This API call is to be used to test
        that the registered schema and the messages that are expected to be published to the resepctive topic later on,
        work as expected.
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SCHEMA
          in: path
          description: Name of the schema
          required: true
          type: string
        - name: Message
          in: body
          description: Schema information
          required: true
          schema:
           type: object
      tags:
        - Schemas
      responses:
        200:
          description: Message is succesfully validated
          schema:
            type: object
            properties:
              message:
                type: string
                default: "Message validated successfully"
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/schemas/{SCHEMA}:
    post:
      summary: Create a new schema
      description: |
        Create a new schema
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SCHEMA
          in: path
          description: Name of the schema
          required: true
          type: string
        - name: Schema information
          in: body
          description: Schema information
          required: true
          schema:
           type: object
           properties:
             schema:
               type: object
             type:
               type: string
      tags:
        - Schemas
      responses:
        200:
          description: A Schema object
          schema:
            $ref: '#/definitions/Schema'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"
    get:
      summary: Retrieve a schema
      description: |
        Retrieve schema
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SCHEMA
          in: path
          description: Name of the schema
          required: true
          type: string
      tags:
        - Schemas
      responses:
        200:
          description: A Schema object
          schema:
            $ref: '#/definitions/Schema'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    put:
      summary: Update a schema
      description: |
        Update schema
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SCHEMA
          in: path
          description: Name of the schema
          required: true
          type: string
        - name: Schema information
          in: body
          description: Update one or all of the fields of a schema
          required: true
          schema:
           type: object
           properties:
             schema:
               type: object
             name:
              type: string
             type:
               type: string
      tags:
        - Schemas
      responses:
        200:
          description: A Schema object
          schema:
            $ref: '#/definitions/Schema'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"
    delete:
      summary: Delete a schema
      description: |
        Delete schema
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SCHEMA
          in: path
          description: Name of the schema
          required: true
          type: string
      tags:
        - Schemas
      responses:
        200:
          description: Empty response if the schema is succesfully deleted
          schema:
            type: string
            default: ""
            description: empty string
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  /metrics:
    get:
      summary: List operational metrics of the ams service
      description: |
        list operational metrics
      parameters:
        - $ref: '#/parameters/ApiKey'
      tags:
        - Operational Metrics
      responses:
        200:
          description: An array of Metrics
          schema:
            type: array
            items:
              $ref: '#/definitions/Metrics'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

  /status:
    get:
      summary: List operational metrics of the ams service
      description: |
        list operational metrics
      tags:
        - Operational Metrics
      responses:
        200:
          description: Returns the health status
          schema:
            $ref: '#/definitions/HealthCheck'
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        500:
          $ref: "#/responses/500"


  /metrics/daily-message-average:
    get:
      summary: List of projects and their message count for the given time window
      description: |
        list operational metrics
      parameters:
        - $ref: '#/parameters/ApiKey'
        - $ref: '#/parameters/StartDate'
        - $ref: '#/parameters/EndDate'
        - $ref: '#/parameters/Projects'
      tags:
        - Operational Metrics
      responses:
        200:
          description: Returns the message count metrics per project
          schema:
            $ref: '#/definitions/TotalProjectMessageCount'
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects:
    get:
      summary: List subscriptions in a project
      description: |
        List all the available projects in the service
      parameters:
        - $ref: '#/parameters/ApiKey'
      tags:
        - Projects
      responses:
        200:
          description: An array of Projects
          schema:
            type: array
            items:
              $ref: '#/definitions/Projects'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}:
    get:
      summary: Show a specific project
      description: |
        Shows a specific projects information
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
      tags:
        - Projects
      responses:
        200:
          description: A Project object
          schema:
            $ref: '#/definitions/Project'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

    post:
      summary: Create a new project
      description: |
        Create a new project in the service
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: Project description
          in: body
          description: Extra project information such as description
          required: true
          schema:
           type: object
           properties:
             description:
               type: string

      tags:
        - Projects
      responses:
        200:
          description: Returns the newly created project object
          schema:
            $ref: '#/definitions/Project'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

    put:
      summary: Update an existing project
      description: |
        Update information on an existing project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: Project information (name,description)
          in: body
          description: Extra project information such as description
          required: true
          schema:
           type: object
           properties:
             name:
               type: string
             description:
               type: string
      tags:
        - Projects
      responses:
        200:
          description: Returns the updated project
          schema:
            $ref: '#/definitions/Project'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

    delete:
      summary: Delete an existing project
      description: |
        This request deletes an existing project and clears all it's contained topics and subscriptions
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
      tags:
        - Projects
      responses:
        200:
          description: Empty response if the project is succesfully deleted
          schema:
            type: string
            default: ""
            description: empty string
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}:metrics:
    get:
      summary: Get metrics for a specific project
      description: |
        Shows a specific projects information
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
      tags:
        - Projects
      responses:
        200:
          description: A Metrics object
          schema:
            $ref: '#/definitions/Metrics'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/members:
    get:
      summary: List users that are members of the project
      description: |
        List all user members of the specific project. This call is can be used only by project admins or service admins
      parameters:
        - $ref: '#/parameters/ApiKey'
        - $ref: '#/parameters/PageToken'
        - $ref: '#/parameters/PageSize'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
      tags:
        - Projects
      responses:
        200:
          description: An array of Users
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/members/{USER}:
    get:
      summary: Show info on a specific user member of the project
      description: |
        Shows information on a specific user member of the project. This call is can be used only by project admins or service admins
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
      tags:
        - Projects
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    post:
      summary: Create a new user member under the specified project
      description: |
        Creates a new user memeber under the specified project.Can be used by the project admin of the project when previosuly only service admins could create users.
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
        - name: User information
          in: body
          description: Extra user information such as roles and email
          required: false
          schema:
           type: object
           properties:
             projects:
               type: array
               items:
                 $ref: "#/definitions/ProjectRoles"
             email:
               type: string
      tags:
        - Projects
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"
    put:
      summary: Update the roles of a user member under the specified project
      description: |
        Update a  user memeber under the specified project.Can be used by the project admin of the project when previosuly only service admins could update users.
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
        - name: User information
          in: body
          description: Extra user information such as roles and email
          required: false
          schema:
           type: object
           properties:
             projects:
               type: array
               items:
                 $ref: "#/definitions/ProjectRoles"
      tags:
        - Projects
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/members/{USER}:ADD:
    post:
      summary: Add a user to the project
      description: |
        Add a user to the project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
        - name: User information
          in: body
          description: Extra user information such as roles and email
          required: false
          schema:
           type: object
           properties:
             projects:
               type: array
               items:
                 $ref: "#/definitions/ProjectRoles"
      tags:
        - Projects
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"


  /projects/{PROJECT}/members/{USER}:remove:
    post:
      summary: Remove a user from the respective project
      description: |
        Removes the user from the respective project.
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
      tags:
        - Projects
      responses:
        200:
          description: Empty response if the user is successfully removed
          schema:
            type: string
            default: "{}"
            description: empty string
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  /users:
    get:
      summary: List users in the service
      description: |
        List all available users in the service
      parameters:
        - $ref: '#/parameters/ApiKey'
        - $ref: '#/parameters/PageToken'
        - $ref: '#/parameters/PageSize'
      tags:
        - Users
      responses:
        200:
          description: An array of Users
          schema:
            type: array
            items:
              $ref: '#/definitions/Users'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /users/{USER}:
    get:
      summary: Show a specific user
      description: |
        Shows a specific user's information
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
      tags:
        - Users
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

    post:
      summary: Create a new user
      description: |
        Create a new user in a project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
        - name: User information
          in: body
          description: Extra user information such as roles and email
          required: false
          schema:
           type: object
           properties:
             projects:
               type: array
               items:
                 $ref: "#/definitions/ProjectRoles"
             email:
               type: string
             service_roles:
               type: array
               items:
                 type: string
      tags:
        - Users
      responses:
        200:
          description: Returns the newly created user
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

    put:
      summary: Update a user
      description: |
        Updates an existing user's information
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
        - name: User information
          in: body
          description: Extra user information such as roles and email
          required: false
          schema:
           type: object
           properties:
             projects:
               type: array
               items:
                 $ref: "#/definitions/ProjectRoles"
             email:
               type: string
             service_roles:
               type: array
               items:
                 type: string
      tags:
        - Users
      responses:
        200:
          description: Returns the modified user
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

    delete:
      summary: Delete an existing user
      description: |
        Deletes an existing user
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string

      tags:
        - Users
      responses:
        200:
          description: Empty response if user is succesfully deleted
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

  /users:byUUID/{UUID}:
    get:
      summary: Show a specific user based on the provided UUID
      description: |
        Show a specific's user information
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: UUID
          in: path
          description: UUID of the user
          required: true
          type: string
      tags:
        - Users
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /users:byToken/{Token}:
    get:
      summary: Show a specific user based on the provided Token
      description: |
        Show a specific's user information
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: Token
          in: path
          description: Token of the user
          required: true
          type: string
      tags:
        - Users
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /users/profile:
    get:
      summary: Show a specific user based on the provided url key
      description: |
        Show a specific's user information
      parameters:
        - $ref: '#/parameters/ApiKey'
      tags:
        - Users
      responses:
        200:
          description: A User object
          schema:
            $ref: '#/definitions/User'
        401:
          $ref: "#/responses/401"
        500:
          $ref: "#/responses/500"

  /users/{USER}:refreshToken:
    post:
      summary: Refreshes the token of an existing user
      description: |
        The user's token is refreshed
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: USER
          in: path
          description: Name of the user
          required: true
          type: string
      tags:
        - Users
      responses:
        200:
          description: A User object with new token
          schema:
            $ref: '#/definitions/User'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions:
    get:
      summary: List subscriptions in a project
      description: |
        The subscriptions endpoint returns a list of available subscriptions for a given project.
        If the USER making the request has only consumer role for the respective project, it will load
        only the subscriptions that he has access to(being present in a subscriptions's acl).
      parameters:
        - $ref: '#/parameters/ApiKey'
        - $ref: '#/parameters/PageToken'
        - $ref: '#/parameters/PageSize'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: An array of subscriptions
          schema:
            $ref: '#/definitions/Subscriptions'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"


  /projects/{PROJECT}/topics/{TOPIC}/subscriptions:
    get:
      summary: List subscriptions in a topic
      description: |
        Returns all the subscriptions associated with a specific topic
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: An array of subscription names
          schema:
            $ref: '#/definitions/SubNamesList'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"


  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:
    get:
      summary: Show infromation about a specific subscription
      description: |
        Lists information about a specific subscription belonging to a specific project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: A Subscription object
          schema:
            $ref: '#/definitions/Subscription'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    put:
      summary: Create a new subscription in a project
      description: |
        This request creates a new subscription in a project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the topic
          required: true
          type: string
        - name: parameters
          in: body
          description: Parameters of the new subscription object
          required: true
          schema:
           $ref: '#/definitions/SubParameters'
      tags:
        - Subscriptions
      responses:
        200:
          description: The new subscription object created
          schema:
            $ref: '#/definitions/Subscription'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

    delete:
      summary: Delete an existing subscription in a project
      description: |
        This request deletes an existing subscription in a project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: Empty response if the subscription is successfully deleted
          schema:
            type: string
            default: ""
            description: empty string
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:acl:
    get:
      summary: List ACL of a given subscription
      description: |
        Show a list of authorized consumers on the given subscription
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the Subscription
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: An array of authorized users
          schema:
            $ref: '#/definitions/AuthUsers'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:modifyAcl:
    post:
      summary: Modify ACL of a given subscription
      description: |
        Modify the list of authorized consumers on a subscription
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: Authorized_users
          in: body
          description: List of authorized users
          required: true
          schema:
           $ref: '#/definitions/AuthUsers'
      tags:
        - Subscriptions
      responses:
        200:
          description: An empty response if Authorized User list is succesfully updated
          schema:
            type: string
            default: ""
            description: empty string
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:modifyOffset:
    post:
      summary: Modify Offset of a given subscription
      description: |
        Modify the Offset of a given subscription
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: Offset
          in: body
          description: Offset
          required: true
          schema:
           $ref: '#/definitions/Offset'
      tags:
        - Subscriptions
      responses:
        200:
          description: An empty response if Authorized User list is succesfully updated
          schema:
            type: string
            default: ""
            description: empty string
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:modifyAckDeadline:
    post:
      summary: Modify Ack Deadline of a given subscription
      description: |
        Modify Ack Deadline of a given subscription. Ack deadline is in seconds. Min value allowed: 0sec. Maximum value allowed: 600sec.
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: AckDeadline
          in: body
          description: AckDeadline
          required: true
          schema:
           $ref: '#/definitions/AckDeadline'
      tags:
        - Subscriptions
      responses:
        200:
          description: An empty response if Ack Deadline is succesfully updated
          schema:
            type: string
            default: ""
            description: empty string
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:offsets:
    get:
      summary: Get min max and current offset of a subscription
      description: |
        Get min max and current offset of a subscription
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: A json representation of min, max and current offsets
          schema:
            $ref: '#/definitions/Offsets'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:timeToOffset:
    get:
      summary: Get the offset of the first message with a timestamp equal or greater than the time given.
      description: |
        Get the offset of the first message with a timestamp equal or greater than the time given.
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: timestamp
          in: query
          description: time in Zulu format
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: A json representation of the offset of the first message with a timestamp equal or greater than the time given.
          schema:
            $ref: '#/definitions/Offset'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409_no_offset_for_time"
        500:
          $ref: "#/responses/500"


  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:pull:
    post:
      summary: Pull Messages from an existing subscription
      description: |
        Use an existing subscription to pull messages
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: Pull Options
          in: body
          description: Parameters to be used during pull
          required: true
          schema:
           $ref: '#/definitions/PullOptions'
      tags:
        - Subscriptions
      responses:
        200:
          description: An array of received messages
          schema:
            $ref: '#/definitions/ReceivedMessages'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409_no_topic"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:acknowledge:
    post:
      summary: Acknowledge the succesfull delivery of pulled messages
      description: |
        Use ackId to inform the api that the messages have been correctly received
      parameters:
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: Ack Options
          in: body
          description: Parameters to be used during acknowledgement
          required: true
          schema:
           $ref: '#/definitions/AckIDs'
      tags:
        - Subscriptions
      responses:
        200:
          description: An array of received messages
          schema:
            $ref: '#/definitions/ReceivedMessages'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        408:
          $ref: "#/responses/408"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:modifyPushConfig:
    post:
      summary: Modify the push configuration options of the subscription
      description: |
        Updating push configuration with push endpoint information results into changing the subscription to push mode. Updating push configuration to be empty results into changing the subscription to pull mode
      parameters:
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: Push Configuration Options
          in: body
          description: Parameters to be used during acknowledgement
          required: true
          schema:
           $ref: '#/definitions/PushConfigRef'
      tags:
        - Subscriptions
      responses:
        200:
          description: Empty response if successful
          schema:
            type: string
            default: ""
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        408:
          $ref: "#/responses/408"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:verifyPushEndpoint:
    post:
      summary: Verify the ownership of the push endpoint
      description: |
        The service will execute a request against the registered push endpoint in order to retrieve the verification_hash that it was generated
      parameters:
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: Empty response if successful
          schema:
            type: string
            default: ""
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409_action_conflict"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:modifyPushStatus:
    post:
      summary: Modify the push status of th subscription
      description: |
        Push status is mainly used to contain information about the state of a subscription on the push server
      parameters:
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
        - name: Push Status
          in: body
          description: push status
          required: true
          schema:
           $ref: '#/definitions/PushStatus'
      tags:
        - Subscriptions
      responses:
        200:
          description: Empty response if successful
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/subscriptions/{SUBSCRIPTION}:metrics:
    get:
      summary: List of metrics related to the specific subscription
      description: |
        Show a list of subscription's metrics like the number of messages published
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: SUBSCRIPTION
          in: path
          description: Name of the subscription
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: Subscription metrics.
          schema:
            $ref: '#/definitions/Metrics'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/topics:
    get:
      summary: List topics in a project
      description: |
        The Topics endpoint returns a list of available topics for a given project.
        If the user making the request has only publisher role for the given project, it will load
        the topics that he has access to(being in a topic's acl).
      parameters:
        - $ref: '#/parameters/ApiKey'
        - $ref: '#/parameters/PageToken'
        - $ref: '#/parameters/PageSize'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
      tags:
        - Topics
      responses:
        200:
          description: An array of topics
          schema:
            $ref: '#/definitions/Topics'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/topics/{TOPIC}:

    get:
      summary: List topics in a project
      description: |
        The Topics endpoint returns a list of available topics for a given project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
      tags:
        - Topics
      responses:
        200:
          description: A topic object
          schema:
            $ref: '#/definitions/Topic'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    put:
      summary: Create a new topic in a project
      description: |
        This request creates a new topic in a project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
        - name: Schema
          in: body
          description: The name of the schema to be linked with the topic.All published messages will be validated against the linked schema.
          required: false
          schema:
           type: object
           properties:
             schema:
               type: string
      tags:
        - Topics
      responses:
        200:
          description: The new topic object created
          schema:
            $ref: '#/definitions/Topic'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"

    delete:
      summary: Delete an existing topic in a project
      description: |
        This request deletes an existing topic in a project
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
      tags:
        - Topics
      responses:
        200:
          description: Empty response if the topic is successfully deleted
          schema:
            type: string
            default: ""
            description: empty string
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        409:
          $ref: "#/responses/409"
        500:
          $ref: "#/responses/500"



  /projects/{PROJECT}/topics/{TOPIC}:publish:
    post:
      summary: List topics in a project
      description: |
        The topic:publish endpoint publish a message to a specific topic
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
        - name: Messages
          in: body
          description: Message JSON representation
          required: true
          schema:
           $ref: '#/definitions/Messages'
      tags:
        - Topics
      responses:
        200:
          description: An array of messageIDs
          schema:
            $ref: '#/definitions/MessageIDs'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/topics/{TOPIC}:acl:
    get:
      summary: List ACL of a given topic
      description: |
        Show a list of authorized producers on the given topic
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
      tags:
        - Topics
      responses:
        200:
          description: An array of authorized users
          schema:
            $ref: '#/definitions/AuthUsers'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/topics/{TOPIC}:metrics:
    get:
      summary: List of metrics related to the specific topic
      description: |
        Show a list of topic metrics like the number of messages published
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
      tags:
        - Topics
      responses:
        200:
          description: Topic metrics.
          schema:
            $ref: '#/definitions/Metrics'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"

  /projects/{PROJECT}/topics/{TOPIC}:modifyAcl:
    post:
      summary: Modify ACL of a given topic
      description: |
        Modify the list of authorized producers on a topic
      parameters:
        - $ref: '#/parameters/ApiKey'
        - name: PROJECT
          in: path
          description: Name of the project
          required: true
          type: string
        - name: TOPIC
          in: path
          description: Name of the topic
          required: true
          type: string
        - name: Authorized_users
          in: body
          description: List of authorized users
          required: true
          schema:
           $ref: '#/definitions/AuthUsers'
      tags:
        - Topics
      responses:
        200:
          description: An empty response if Authorized User list is succesfully updated
          schema:
            $ref: '#/definitions/AuthUsers'
        400:
          $ref: "#/responses/400"
        401:
          $ref: "#/responses/401"
        403:
          $ref: "#/responses/403"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  
  /version:
    get:
      summary: "List API Version information"
      description: "List api version information such as release version, commit hash etc"
      tags:
        - Version
      produces:
        - "application/json"
        - "application/xml"
      responses:
        200:
          description: "Successful retrieval of version info"
          schema:
            $ref: "#/definitions/Version"

parameters:
  ApiKey:
    name: key
    in: query
    description: user key token for authentication
    required: true
    type: string
    default: SecretKey123
  PageToken:
    name: pageToken
    in: query
    description: the starting point of the next users page
    required: false
    type: string
    default: empty string
  PageSize:
    name: pageSize
    in: query
    description: the amount of objects the page will contain. The default value 0 will return all the results
    required: false
    type: integer
    default: 0
  StartDate:
    name: start_date
    in: query
    required: false
    description: the start date for querying projects message counters
    type: string
    default: unix start date
  EndDate:
    name: end_date
    in: query
    required: false
    description: the end date for querying projects message counters
    type: string
    default: the date at the time of the api call
  Projects:
    name: projects
    in: query
    required: false
    description: the projects to include in the query
    type: array
    items:
      type: string
    default: all of the registered projects

responses:
  400:
    description: Invalid argument used
    schema:
      $ref: '#/definitions/ErrorMsg'
  401:
    description: Unauthorized user based on key
    schema:
      $ref: '#/definitions/ErrorMsg'
  403:
    description: Access Forbidden for the user on the resource
    schema:
      $ref: '#/definitions/ErrorMsg'
  404:
    description: Item not found
    schema:
      $ref: '#/definitions/ErrorMsg'
  408:
    description: Server timed out waiting for the request
    schema:
      $ref: '#/definitions/ErrorMsg'
  409:
    description: Item already exists!
    schema:
      $ref: '#/definitions/ErrorMsg'
  409_action_conflict:
    description: A conflict occurred due to the user's action!
    schema:
      $ref: '#/definitions/ErrorMsg'

  409_no_topic:
      description: Subscription's topic doesn't exist
      schema:
        $ref: '#/definitions/ErrorMsg'

  409_no_offset_for_time:
      description: Timestamp is out of bounds for the subscription's topic/partition
      schema:
        $ref: '#/definitions/ErrorMsg'

  500:
    description: Internal Error
    schema:
      $ref: '#/definitions/ErrorMsg'

definitions:

  SchemaList:
    type: object
    properties:
      schemas:
        type: array
        items:
          $ref: '#/definitions/Schema'

  Schema:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      uuid:
        type: string
      schema:
        type: object

  TotalProjectMessageCount:
    type: object
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/ProjectMessageCount'
      total_message_count:
        type: integer
      average_daily_messages:
        type: integer

  ProjectMessageCount:
    type: object
    properties:
      project:
        type: string
      message_count:
        type: integer
      average_daily_messages:
        type: integer

  Metrics:
   type: object
   properties:
     metrics:
       type: array
       items:
         $ref: '#/definitions/Metric'

  Metric:
    type: object
    properties:
      metric:
        type: string
      metric_type:
        type: string
      resource_type:
        type: string
      resource_name:
        type: string
      value_type:
        type: string
      description:
        type: string
      timeseries:
        type: array
        items:
          $ref: '#/definitions/Timepoint'

  Timepoint:
    type: object
    properties:
      timestamp:
        type: string
      value:
        type: string
        
  


  AuthUsers:
    type: object
    properties:
      authorized_users:
        type: array
        items:
         type: string

  PullOptions:
    type: object
    properties:
      maxMessages:
        type: string
        description: Max number of messages to be consumed
      returnImmediately:
        type: string
        description: Set if should return immediately and close connection (if no messages are present) or wait until new messages

  SubParameters:
    type: object
    properties:
      topic:
        type: string
        description: name of the topic this subscription will subscribe to
      ackDeadlineSeconds:
        type: integer
        description: maximum wait time in seconds for Acknowledgement

  Subscription:
    type: object
    properties:
      name:
        type: string
        description: Name of the subscription
      topic:
        type: string
        description: Name of the topic
      pushConfig:
            $ref: '#/definitions/PushConfig'
      ackDeadlineSeconds:
        type: integer
        description: maximum wait time in seconds for Acknowledgement
  PushConfigRef:
    type: object
    properties:
      pushConfig:
         $ref: '#/definitions/PushConfig'
  PushConfig:
    type: object
    properties:
      pushEndpoint:
        type: string
        description: endpoint url for endpoint to push messages
      maxMessages:
        type: integer
        description: batch size of messages per push action
      retryPolicy:
        $ref: '#/definitions/RetryPolicy'
      verification_hash:
        type: string
      verified:
        type: boolean

  PushStatus:
    type: object
    properties:
      push_status:
        type: string
        description: push status

  AckDeadline:
    type: object
    properties:
      ackDeadlineSeconds:
       type: integer
       description: deadline to acknowledge a pulled message (in seconds)

  Offset:
    type: object
    properties:
      offset:
       type: integer
       description: offset number of current subscriptions

  Offsets:
    type: object
    properties:
      min:
       type: integer
       description: minimum offset
      max:
       type: integer
       description: max offset
      current:
       type: integer
       description: current offset

  RetryPolicy:
    type: object
    properties:
     type:
       type: string
       description: type of the retry policy used (Only linear policy supported)
     period:
       type: integer
       description: period of retry policy in milliseconds

  Topic:
    type: object
    properties:
      name:
        type: string
        description: Name of the topic

  Topics:
    type: object
    properties:
      topics:
        type: array
        items:
          $ref: '#/definitions/Topic'
      nextPageToken:
        type: string
      totalSize:
        type: integer

  Subscriptions:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/Subscription'
      nextPageToken:
        type: string
      totalSize:
        type: integer

  Message:
    type: object
    properties:
      attributes:
        type: object

      data:
        type: string
        description: Message payload in Base64 encoding"
  Messages:
    type: array
    items:
      $ref: '#/definitions/Message'
  ReceivedMessages:
    type: object
    properties:
      receivedMessages:
        type: array
        items:
          $ref: '#/definitions/ReceivedMessage'
  ReceivedMessage:
    type: object
    properties:
      ackId:
        type: string
        description: AckId to be used in acknowledge request
      message:
        type: object
        properties:
          messageId:
            type: string
            description: id of the message
          attributes:
            type: object
            description: key/value dictionary accompanying the message

          data:
            type: string
            description: base64 encoding of the message payload
          publishTime:
            type: string
            description: publish datetime in ISO8601 string (+ns)

  Projects:
    type: object
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'

  Project:
     type: object
     properties:
       name:
        type: string
       created_on:
        type: string
       modified_on:
        type: string
       created_by:
        type: string
       description:
        type: string

  Users:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
      nextPageToken:
        type: string
      totalSize:
        type: integer

  User:
     type: object
     properties:
       uuid:
        type: string
       name:
        type: string
       first_name:
        type: string
       last_name:
        type: string
       organization:
        type: string
       description:
        type: string
       projects:
        type: array
        items:
           $ref: '#/definitions/ProjectRoles'
       token:
        type: string
       email:
        type: string
       service_roles:
        type: array
        items:
          type: string
       created_on:
        type: string
       modified_on:
        type: string
       created_by:
        type: string

  ProjectRoles:
      type: object
      properties:
        project:
          type: string
        roles:
          type: array
          items:
            type: string

  MessageIDs:
     type: object
     properties:
       messageIds:
         type: array
         items:
           type: string

  AckIDs:
     type: object
     properties:
       ackIds:
         type: array
         items:
           type: string

  HealthCheck:
    type: object
    properties:
      status:
        type: string
      push_servers:
        type: array
        items:
          $ref: '#/definitions/PushServerInfo'

  PushServerInfo:
    type: object
    properties:
      endpoint:
        type: string
      status:
        type: string

  SubNamesList:
    type: object
    properties:
      subscriptions:
        type: array
        items:
          type: string

  ErrorMsg:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: string
            description: code of the error
          message:
            type: string
            description: general message of the error
          status:
            type: string
            description: status of the error
            
  Version:
    type: object
    properties:
      release:
        type: string
      commit: 
        type: string        
      build_time: 
        type: string
      golang:
        type: string
      compiler: 
        type: string
      os: 
        type: string
      architecture:
          type: string